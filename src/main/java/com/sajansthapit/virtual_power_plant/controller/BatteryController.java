package com.sajansthapit.virtual_power_plant.controller;import com.sajansthapit.virtual_power_plant.dto.request.BatteryFilterRequest;import com.sajansthapit.virtual_power_plant.dto.request.BatteryRequest;import com.sajansthapit.virtual_power_plant.dto.response.BatteryFilterResponse;import com.sajansthapit.virtual_power_plant.dto.response.BatterySaveResponse;import com.sajansthapit.virtual_power_plant.service.IBatteryService;import com.sajansthapit.virtual_power_plant.utils.Constants;import jakarta.validation.Valid;import jakarta.validation.constraints.NotEmpty;import jakarta.validation.constraints.Pattern;import lombok.AllArgsConstructor;import org.springframework.http.HttpStatus;import org.springframework.http.ResponseEntity;import org.springframework.validation.annotation.Validated;import org.springframework.web.bind.annotation.*;@Validated@RestController@AllArgsConstructor@RequestMapping("/api/battery/")public class BatteryController {    private final IBatteryService batteryService;    @PostMapping("/save-all")    public ResponseEntity<BatterySaveResponse> saveAll(@RequestBody @Valid BatteryRequest batteryRequest) {        BatterySaveResponse batterySaveResponse = batteryService.saveAll(batteryRequest);        return new ResponseEntity<>(batterySaveResponse, HttpStatus.CREATED);    }    @GetMapping("/filter")    public ResponseEntity<BatteryFilterResponse> filter(@RequestParam(value = "postCodeFrom")                                                        @NotEmpty(message = "Post Code from value must not be empty")                                                        @Pattern(regexp = Constants.POSTCODE_PATTERN, message = "Post Code from must contain 5 digits")                                                        String postCodeFrom,                                                        @RequestParam(value = "postCodeTo")                                                        @NotEmpty(message = "Post Code to value must not be empty")                                                        @Pattern(regexp = Constants.POSTCODE_PATTERN, message = "Post Code to must contain 5 digits")                                                        String postCodeTo) {        BatteryFilterRequest batteryFilterRequest = new BatteryFilterRequest(postCodeFrom, postCodeTo);        BatteryFilterResponse batteryFilterResponse = batteryService.filter(batteryFilterRequest);        return new ResponseEntity<>(batteryFilterResponse, HttpStatus.FOUND);    }}